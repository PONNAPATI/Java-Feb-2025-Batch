Explanation

    Method Overloading:
         The brewCoffee method is overloaded three times in the CoffeeMachine class. Each version of brewCoffee has the same name but different parameter lists:

                brewCoffee() with no parameters (brews a standard coffee).
                brewCoffee(String size) (brews a coffee of a specified size).
                brewCoffee(String size, String flavor) (brews a coffee with specified size and flavor).

Compile-Time Selection:
        When you call brewCoffee(), the Java compiler decides which method to use based on the number and type of arguments you provide:

                No arguments → calls the version with no parameters.
                One String argument → calls the version with String size.
                Two String arguments → calls the version with (String size, String flavor).

Flexibility:
        Method overloading makes your code more flexible and user-friendly. You can create multiple ways to call the same method name, adjusting the details of how it’s invoked.

Usage:
        In the main method, we create a CoffeeMachine instance and demonstrate each overloaded method:

        A default coffee with no parameters,
        A coffee where we only specify size, and
        A coffee where we specify both size and flavor.